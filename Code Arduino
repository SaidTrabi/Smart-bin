#define BLYNK_TEMPLATE_ID "TMPL3a1XWSUIl"
#define BLYNK_TEMPLATE_NAME "Piscine intelligent"
#define BLYNK_AUTH_TOKEN "AA1EWww7Qj3WrYNAqwqtinlDJFQLPjqp"
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>


#define trigPin1 23
#define echoPin1 22
#define trigPin2 32
#define echoPin2 33
#define servoPin 25

long duration1, duration2;
int distance1, distance2;

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "inwi Home 4GC2232C";
char pass[] = "49@42.67#94";

BlynkTimer timer;


void setup() {
  pinMode(trigPin1, OUTPUT); 
  pinMode(echoPin1, INPUT); 
  pinMode(trigPin2, OUTPUT); 
  pinMode(echoPin2, INPUT); 
  
  Serial.begin(115200);

  Blynk.begin(auth, ssid, pass);
  timer.setInterval(500L, sendDistances); // Send distances every 500 milliseconds
  
  
}

void loop() {
  Blynk.run();
  timer.run();
}

void sendDistances() {
  // Send ultrasonic pulse for distance1
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  
  duration1 = pulseIn(echoPin1, HIGH);
  distance1 = duration1 * 0.034 / 2;
  Blynk.virtualWrite(V0, distance1);

  // Send ultrasonic pulse for distance2
  duration2 = pulseIn(echoPin2, HIGH);
  distance2 = duration2 / (29 * 2);
  
  Serial.print("Distance: ");
  Serial.println(distance2);
  
  if (distance2 < 68) {
 
    delay(3000);
  } else {

    delay(100);
  } 
}
